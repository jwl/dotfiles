# Path to your oh-my-zsh installation.
export ZSH=$HOME/.oh-my-zsh

# Set name of the theme to load.
# Look in ~/.oh-my-zsh/themes/
# Optionally, if you set this to "random", it'll load a random theme each
# time that oh-my-zsh is loaded.
ZSH_THEME="bira-JLEUNML1_01"
#ZSH_THEME="agnoster-suari01"
#ZSH_THEME="agnoster"

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion. Case
# sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# The optional three formats: "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
# https://medium.com/swlh/set-up-a-shell-python-development-environment-from-scratch-part-1-zsh-vim-configuration-8b6c2cc3fb1b
plugins=(git virtualenv vi-mode)
plugins+=(nvm)
plugins+=(zsh-autosuggestions)

# User configuration

export PATH=$HOME/bin:/usr/local/bin:$PATH
# export MANPATH="/usr/local/man:$MANPATH"

# enable Homebrew completions in zsh: https://docs.brew.sh/Shell-Completion#configuring-completions-in-zsh
if type brew &>/dev/null; then
  FPATH=$(brew --prefix)/share/zsh/site-functions:$FPATH

  autoload -Uz compinit
  compinit
fi

# $PATH stuff
export PATH=/Users/jwl/bin:/usr/local/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin
export PATH="$HOME/.cargo/bin:$PATH"
export PATH="/usr/local/opt/gnu-sed/libexec/gnubin:$PATH"
export PATH="$HOME/.yarn/bin:$HOME/.config/yarn/global/node_modules/.bin:$PATH"
export PATH="/usr/local/opt/terraform@0.11/bin:$PATH"
export PATH="$HOME/.poetry/bin:$PATH"
export PATH="/opt/homebrew/bin:$PATH"
export PATH="$PATH:/Users/jwl/.local/bin"

# add go/golang to $PATH
export PATH="/usr/local/go/bin":$PATH
export PATH="$HOME/go/bin:$PATH"

# initialize pyenv and pyenv-virtualenv
# note that this must come BEFORE oh-my-zsh initialization
# https://github.com/pyenv/pyenv/issues/1915#issuecomment-862773248
eval "$(pyenv init --path)"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"


# omz nvm plugin configuration
# https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/nvm
zstyle ':omz:plugins:nvm' autoload yes
zstyle ':omz:plugins:nvm' silent-autoload yes # optionally remove the output generated by NVM when autoloading

fpath=(~/.zsh/completion $fpath)

source $ZSH/oh-my-zsh.sh


# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# ssh
# export SSH_KEY_PATH="~/.ssh/dsa_id"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
#alias drmi="docker rmi $(docker images --filter "dangling=true" -q --no-trunc)"
#alias docker_clean="docker rm $(docker ps -a -q)"

alias t="todo.sh -a"

# use exa as a better li
alias ls='eza --group-directories-first'
alias ll='eza --long --group-directories-first --header --git'
alias la='eza -la --no-user --group-directories-first --time-style long-iso --header --git'

# End personal aliase

export EDITOR=nvim

# enable vim keybindings
bindkey -v

# bind up and down arrow to searching history substring up and down
bindkey "^[[A" history-substring-search-up
bindkey "^[[B" history-substring-search-down

# golang paht stuff
# https://medium.com/@krisma/gopath-and-goroot-set-up-in-mac-and-in-vscode-cf86d8503e57
# but set goroot to /usr/local/go instead
#export GOROOT=/usr/local/go/ # default 1.15 intel golang
#export GOPATH=${HOME}/go
#export PATH=$PATH:$GOROOT/bin
#export PATH=$PATH:$GOPATH/bin

# direnv hook into shell
# https://direnv.net/docs/hook.html
#eval "$(direnv hook zsh)"

# load FZF
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
# Set up fzf key bindings and fuzzy completion
source <(fzf --zsh)

[[ -s "/Users/jwl/.gvm/scripts/gvm" ]] && source "/Users/jwl/.gvm/scripts/gvm"

# helper function to open yazi in the current working directory
function yy() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")"
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		builtin cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}


# NVM Config
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm

